doc_title = "Hooks"
doc_next = ("Unicode", "/unicode/")
[----------------------------------------]
{% extends doc.html %}
{% block doc %}

<p>Aspen's request handling control flow is modeled as a list of functions that
have their dependencies injected based on the name of the arguments in the
function definition. Here are the signatures of the functions in the stock
request flow:</p>

<pre>def parse_environ_into_request(environ):

def tack_website_onto_request(request, website):

def dispatch_request_to_filesystem(request):

def get_response_for_socket(request):

def get_response_for_resource(request, response):

def get_response_for_exception(exc_info):

def log_traceback_for_5xx(response):

def delegate_error_to_simplate(website, request, response):

def log_traceback_for_exception(website, exc_info):

def log_result_of_request(website, response, request):
</pre>

<p>Each function returns <code>None</code> or a dictionary that will be used to
update the control flow state for dependency injection. So if a function
returns <code>{"foo": bar}</code>, then downstream functions that ask for
<code>foo</code> will get <code>bar</code>.</p>

<p>You can add your own functions to the request flow by modifying the list at
<code>website.flow.functions</code> in <a
href="/configure-aspen.py/"><code>configure-aspen.py</code></a>.</p>


<h3>Exception Handling</h3>

<p>Each function is run in a <code>try</code>/<code>except</code> block, and if
the function raises an exception then <code>sys.exc_info()</code> is captured
(the <code>traceback</code> object is converted to a string traceback to avoid
leaking memory) and made available to downstream functions as
<code>exc_info</code> .</p>

<p>If a function asks for <code>exc_info</code> and there is no exception being
handled (<code>exc_info</code> is <code>None</code>), that function will be
skipped.</p>

<p>If a function <i>doesn't</i> ask for <code>exc_info</code> and there
<i>is</i> an exception being handled (<code>exc_info</code> is not
<code>None</code>), <i>that</i> function will be skipped.</p>

{% end %}
